.menubar {
		
	// Positioning & size
	width: 100%;
	@include narrow-layout { height: auto; }
	@include medium-layout { height: $menubar-height-medium; }
	@include wide-layout { height: $menubar-height-wide; }

	// Never display input elements
	input { display: none; }
	
	@include narrow-layout {

		// Only displayed when the menu symbol is checked
		display: none;

		// Display the menu items vertically.
		flex-direction: column;
			
		// Appearances
		background: $menubar-background-narrow;
			
		// Make sure the separator is empty
		.item-separator:after { content: none; }
		.item-separator {
			//display: block;
			width: 100%;
			height: $menubar-item-separator-line-width-narrow;
			background-color: $menubar-item-separator-line-color-narrow;
		}
			
		.item {
			
			// Layout
			display: flex;
			flex-direction: column;
			
			// Make the link areas as big as possible
			a {	width: 100%; height: 100%; }
				
			// Remove link underlining
			a { text-decoration: none; }
			
			// If the checkbox is checked
			input:checked ~ {

				// Show submenu
				.dropdown { display: flex; }

				// When the submenu is open, show the appropriate symbol
				.title .symbol .code:after { content: $menubar-item-title-symbol-code-open-narrow; }
			}

			.title {
				
				// Layout
				display: flex;
				height: $menubar-item-height-narrow;
				.symbol { width: $menubar-item-disclosure-symbol-width-narrow; }
				.text { width: 100%; } // Takes up remainder of .title width
				
				// Use the item color for all elements & Hover effect
				background: $menubar-item-background-narrow;
				&:hover {
					background: $menubar-item-background-hover-narrow;
				}

				.symbol {

					// Layout: Center the disclosure symbol
					display: flex;
					justify-content: center;
					align-items: center;
						
					// Load the disclosure symbol for the closed state
					.code:after { content: $menubar-item-title-symbol-code-closed-narrow; }
				
					// Show a clickable symbol over the disclosure symbol
					.code { cursor: pointer; }
				}
					
				.text {

					// Layout: Center vertically and justify-left
					display: flex;
					justify-content: start;
					align-items: center;
					
					// Use the item color for all elements & Hover effect
					p { color: $menubar-item-color-narrow; }
					&:hover {
						p { color: $menubar-item-hover-color-narrow; }
					}

				}
			}
		
			.dropdown {
				
				// Disable submenu by default
				display: none;
				
				// Subitems are stacked vertically
				flex-direction: column;
					
				.subitem-separator {
					display: block;
					width: 100%;
					height: $menubar-subitem-separator-line-width-narrow;
					background-color: $menubar-subitem-separator-line-color-narrow;
				}
					
				.subitem .title {
						
					// Layout (row oriented)
					display: flex;
					
					// Appearance
					background: $menubar-subitem-background-narrow;
						
					.symbol { width: $menubar-item-disclosure-symbol-width-narrow; }
						
					.text a {
						display: flex;
						justify-content: start;
						align-items: center;
					}
						
					p { padding-left: $menubar-subitem-indent-narrow; }
				}
			}
		}
		
		.isActiveSelection { background: $menubar-item-background-selected-narrow; }
	}
			
	@include medium-and-wide-layout {
		
		// Display by default
		display: flex;

		// Appearances
		@include medium-layout {
			background: $menubar-background-medium;
			border: $menubar-border-medium;
			box-shadow: $menubar-box-shadow-medium;
		}
		@include wide-layout {
			background: $menubar-background-wide;
			border: $menubar-border-wide;
			box-shadow: $menubar-box-shadow-wide;
		}

		// Positioning of items and item-separators.
		flex-direction: row;
		@include medium-layout {
			justify-content: $menubar-justify-content-medium;
			align-items: $menubar-align-items-medium;
		}
		@include wide-layout {
			justify-content: $menubar-justify-content-wide;
			align-items: $menubar-align-items-wide;
		}

		.menubar-icon {
				
			@include medium-layout {
				width: $menubar-icon-width-medium;
				height: $menubar-icon-height-medium;
				content: $menubar-icon-url-medium;
				padding: $menubar-icon-padding-medium;
			}
			@include wide-layout {
				width: $menubar-icon-width-wide;
				height: $menubar-icon-height-wide;
				content: $menubar-icon-url-wide;
				padding: $menubar-icon-padding-wide;
			}
		}

		.item-separator {
	
			@include medium-layout {

				// Appearance
				color: $menubar-item-separator-symbol-color-medium;
				background: $menubar-item-separator-symbol-background-medium;
			
				// Set padding
				padding: $menubar-item-separator-symbol-padding-medium;
	
				// Set the separator symbol
				p:after { content: $menubar-item-separator-symbol-medium; }

				// The font for the separator
				p { font: $menubar-item-separator-symbol-font-medium; }
			}
					
			@include wide-layout {
				
				// Appearance
				color: $menubar-item-separator-symbol-color-wide;
				background: $menubar-item-separator-symbol-background-wide;

				// Set padding
				padding: $menubar-item-separator-symbol-padding-wide;
	
				// Set the separator symbol
				p:after { content: $menubar-item-separator-symbol-wide; }

				// The font for the separator
				p { font: $menubar-item-separator-symbol-font-wide; }
			}
		}
			
		// Make all p's as small as possible
		p { margin: 0; padding: 0; }
			
		.item {
			
			// Vertical layout
			display: flex;
			flex-direction: column;		
			
			// Make this the baseline reverence for the dropdown box
			position: relative;
			
			// Hover effect
			@include medium-layout {
				p { color: $menubar-item-color-medium; }
				background: $menubar-item-background-medium;
				&:hover {
					p { color: $menubar-item-hover-color-medium; }
					background: $menubar-item-background-hover-medium;
				}
			}
			@include wide-layout {
				p { color: $menubar-item-color-wide; }
				background: $menubar-item-background-wide;
				&:hover {
					p { color: $menubar-item-hover-color-wide; }
					background: $menubar-item-background-hover-wide;
				}
			}
				
			// Make the entire hightlight block clickable
			a {	display: block; }
				
			// Remove the link underlining
			a { text-decoration: none; }

			// Prevent wrapping of the (sub) menu items
			p { white-space: nowrap; }
			
			@include medium-layout {
				
				// Sizing of the items
				a, .paddingAsLink { padding: $menubar-item-padding-medium;}
					
				// Font for the item text
				p { font: $menubar-item-font-medium; }
			}
			@include wide-layout {

				// Sizing of the items
				a, .paddingAsLink { padding: $menubar-item-padding-wide;}
	
				// Font for the item text
				p { font: $menubar-item-font-wide; }
			}

			// Display the submenu if the user hovers the mouse over it
			&:hover .dropdown { display: block; }

			// Display the submenu if the user taps the corresponding menu item
			input:checked ~ .dropdown { display: block; }					

			.title {
				@include medium-layout { height: $menubar-item-height-medium; }
				@include wide-layout { height: $menubar-item-height-wide; }
			}
			
			.dropdown {
						
				// Visibility depends on hovering over the item
				display: none;

				// Don't show the separators
				.subitem-separator { display: none; }
					
				// Position the dropdown below the item.
				position: absolute;
				top: 100%;
								
				// Appearances
				@include medium-layout {
					margin: $menubar-dropdown-margin-medium;
					padding: $menubar-dropdown-padding-medium;
					background: $menubar-dropdown-background-medium;
					border: $menubar-dropdown-border-medium;
					box-shadow: $menubar-dropdown-box-shadow-medium;
				}
				@include wide-layout {
					margin: $menubar-dropdown-margin-wide;
					padding: $menubar-dropdown-padding-wide;
					background: $menubar-dropdown-background-wide;
					border: $menubar-dropdown-border-wide;
					box-shadow: $menubar-dropdown-box-shadow-wide;
				}

				.subitem {
													
					@include medium-layout {
						
						// Hover effect
						p { color: $menubar-subitem-color-medium; }
						background: $menubar-subitem-background-medium;
						&:hover {
							p { color: $menubar-subitem-hover-color-medium; }
							background: $menubar-subitem-background-hover-medium;
						}

						// Sizing of the subitems
						a, .paddingAsLink { padding: $menubar-subitem-padding-medium; }
							
						// Font for subitem text
						p { font: $menubar-subitem-font-medium; }
					}
					@include wide-layout {
						
						// Hover effect
						p { color: $menubar-subitem-color-wide; }
						background: $menubar-subitem-background-wide;
						&:hover {
							p { color: $menubar-subitem-hover-color-wide; }
							background: $menubar-subitem-background-hover-wide;
						}

						// Sizing of the subitems
						a, .paddingAsLink { padding: $menubar-subitem-padding-wide; }
							
						// Font for subitem text
						p { font: $menubar-subitem-font-wide; }
					}
				}

		// Show selection for pages that match a menu entry
		@include medium-layout { .isActiveSelection { background: $menubar-subitem-background-selected-medium; } }
		@include wide-layout { .isActiveSelection { background: $menubar-subitem-background-selected-wide; } }
			}
		}
			
		// Show selection for pages that match a menu entry
		@include medium-layout { .isActiveSelection { background: $menubar-item-background-selected-medium; } }
		@include wide-layout { .isActiveSelection { background: $menubar-item-background-selected-wide; } }
	}
}