

// Formatting for the navbanner panel elements.
.navbanner-panel {
	
	// Title formatting
	.navbanner-title {
		position: relative;
		.site-title-text {
			color: $site-title-color;
			margin-bottom: 0;
			@include wide-layout {
				font-size: $wide-site-title-font-size;
				margin-left: $wide-horizontal-title-shift;
				margin-top: $wide-vertical-title-shift;
			}
			@include medium-layout {
				font-size: $medium-site-title-font-size;
				margin-left: $medium-horizontal-title-shift;
				margin-top: $medium-vertical-title-shift;
			}		
			@include narrow-layout {
				font-size: $narrow-site-title-font-size;
				margin-left: $narrow-horizontal-title-shift;
				margin-top: $narrow-vertical-title-shift;
			}
		}
		.banner-icon-container {
			position: absolute;
			top: 0px;
			left: 0px;
			width: 100%;
			height: 100%;
			display: flex;
			overflow: hidden;
		}
		@include wide-layout {
			height: $wide-banner-height;
			background-color: $wide-banner-background;
			@if $wide-icon-url != none {
				.banner-icon {
					margin-top: $wide-icon-voffset;
					margin-left: $wide-icon-hoffset;
					content: $wide-icon-url;
				}
				.banner-icon-container {
					@if $wide-icon-vposition == top {
						align-items: flex-start;
					} @else if $wide-icon-vposition == bottom {
						align-items: flex-end;
					} @else {
						align-items: $wide-icon-vposition;
					}
					@if $wide-icon-hposition == left {
						justify-content: flex-start;
					} @else if $wide-icon-hposition == right {
						justify-content: flex-end;
					} @else {
						justify-content: $wide-icon-hposition;
					}
				}
			}
		}
		@include medium-layout {
			height: $medium-banner-height;
			background: $medium-banner-background;
			@if $medium-icon-url != none {
				.banner-icon {
					margin-top: $medium-icon-voffset;
					margin-left: $medium-icon-hoffset;
					content: $medium-icon-url;
				}
				.banner-icon-container {
					@if $medium-icon-vposition == top {
						align-items: flex-start;
					} @else if $medium-icon-vposition == bottom {
						align-items: flex-end;
					} @else {
						align-items: $medium-icon-vposition;
					}
					@if $medium-icon-hposition == left {
						justify-content: flex-start;
					} @else if $medium-icon-hposition == right {
						justify-content: flex-end;
					} @else {
						justify-content: $medium-icon-hposition;
					}
				}
			}
		}
		@include narrow-layout {	
			height: $narrow-banner-height;
			background: $narrow-banner-background;
			@if $narrow-icon-url != none {
				.banner-icon {
					margin-top: $narrow-icon-voffset;
					margin-left: $narrow-icon-hoffset;
					content: $narrow-icon-url;
				}
				.banner-icon-container {
					@if $narrow-icon-vposition == top {
						align-items: flex-start;
					} @else if $narrow-icon-vposition == bottom {
						align-items: flex-end;
					} @else {
						align-items: $narrow-icon-vposition;
					}
					@if $narrow-icon-hposition == left {
						justify-content: flex-start;
					} @else if $narrow-icon-hposition == right {
						justify-content: flex-end;
					} @else {
						justify-content: $narrow-icon-hposition;
					}
				}
			}
		}
	}

	// Label formatting
	.navbanner-label {
	
		// Introduction of an icon had an impact on the label behaviour (don't know why) this fixes it.
		// I found this solution by second-guessing, would love to know why... (please mail me if you do)
		position: relative;
		
		// Color for the menu symbol (only visible on narrow and medium sized layouts)
		label {
			padding: 0 $hspacing-unit; // Give the menu label more area to make it easier to tap.
			p {
				color: $menu-symbol-color;
				margin: 0;
				@include wide-layout {
					// Note: the label is not visible, but we set the correct values anyhow...
					font-size: $narrow-site-title-font-size;
				}
				@include medium-layout {
					font-size: $medium-site-title-font-size;
				}
				@include narrow-layout {
					font-size: $narrow-site-title-font-size;
				}
			}
		}
		
		// Size of the title and menu symbol depends on the layout in effect.
		@include narrow-layout {
			height: $narrow-banner-height;
			background: $narrow-banner-background;
		}
		@include medium-layout {
			height: $medium-banner-height;
			background: $medium-banner-background;
		}
		@include wide-layout {
			height: $narrow-banner-height;
			background: $narrow-banner-background;
		}
	}

	// Formating for the separator between the banner and menubar.	
	.menubar-separator-top {
		border-top: $navbanner-menu-dividers-thickness solid $navbanner-menu-dividers-color;
		@if ($navbanner-menu-top-divider-disable == true) {
			display: none;
		} @else {
			display: $navbanner-menu-dividers-display;
		}
	}
	
	// Formatting for the separator between menubar and column panel.
	.menubar-separator-bottom {
		border-top: $navbanner-menu-dividers-thickness solid $navbanner-menu-dividers-color;
		display: $navbanner-menu-dividers-display;
	}
}

// The navigation & banner (these two have to be together to enable a RWD design with an input/label in the banner area.)
//
.navbanner-panel {
		
	// Use the flex layout rules.
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	justify-content: flex-start;

	// The size of the title depends on the width of the window.
	.navbanner-title {
	
		// The title area should take up all space not used by the menu label.
		flex-grow: 1;

		// Center the title if visible
		@if ($navbanner-include-banner == true) { display: flex; } @else { display: none }
		justify-content: center;
		align-items: center;
	}

	// The menu label is only visible in narrow layout.
	.navbanner-label {
		
		// Never grow the menu label (symbol)
		flex-grow: 0;

		// The menu label (symbol) should be centered if visible
		@if ($navbanner-include-banner == true) { display: flex; } @else { display: none }
		justify-content: center;
		align-items: center;

		// The label is used as checkbox-label, it should show a pointer when the mouse is above it.
		label {
			p:after { content: $menu-symbol-code; } // Set the menu symbol
			cursor: pointer;
		}
	}

	// The dividers should run accross the entire window. Note that they are not always visible, that depends on the active layout.
	.nav-top-divider { width: 100%; }
	.nav-bottom-divider { width: 100%; }
		
	@include narrow-layout {

		// Override visibility of the label 
		@if ($navbanner-include-banner == false) { .navbanner-label, .navbanner-title { display: flex; } }

		// Disabled items.
		.nav-bottom-divider, input { display: none; }
		
		// Display the menu only when the menu-checkbox (invisible) is checked.
		input:checked ~ { .menubar { display: flex; } }

		.menubar {

			// Is only visible when the menu symbol is selected
			display: none;

			// This forces the menu items below the banner.
			width: 100%;
			
			// Display the menu items vertically.
			flex-direction: column;
			
			// Appearances
			background-color: $menubar-background-color;
			
			// Make sure the separator is empty
			.separator:after { content: ''; }
			.separator {
				//display: block;
				width: 100%;
				height: $menubar-item-separator-line-width-narrow;
				background-color: $menubar-item-separator-line-color-narrow;
			}
			
			.item {
			
				// Layout
				display: flex;
				flex-direction: column;
				
				// Appearance
				background-color: $menubar-item-background-color-narrow;

				// Make the link areas as big as possible
				a {	width: 100%; height: 100%; }
				
				// Remove link underlining
				a { text-decoration: none; }

				// Use the item color for all elements
				p { color: $menubar-item-color }

				// If the checkbox is checked
				input:checked ~ {

					// Show submenu
					.dropdown { display: flex; }

					// When the submenu is open, show the appropriate symbol
					.title .symbol .code:after { content: $menubar-item-title-symbol-code-open-narrow; }
				}

				.title {
				
					// Layout
					display: flex;
					height: $menubar-item-height-narrow;
					.symbol { width: $menubar-item-disclosure-symbol-width-narrow; }
					.text { width: 100%; } // Takes up remainder of .title width
					
					.symbol {

						// Layout: Center the disclosure symbol
						display: flex;
						justify-content: center;
						align-items: center;
						
						// Load the disclosure symbol for the closed state
						.code:after { content: $menubar-item-title-symbol-code-closed-narrow; }
				
						// Show a clickable symbol over the disclosure symbol
						.code { cursor: pointer; }
					}
					
					.text {

						// Layout: Center vertically and justify-left
						display: flex;
						justify-content: start;
						align-items: center;
					}
				}
								
				.dropdown {
				
					// Disable submenu by default
					display: none;
					
					// Subitems are stacked vertically
					flex-direction: column;
					
					.separator {
						display: block;
						width: 100%;
						height: $menubar-subitem-separator-line-width-narrow;
						background-color: $menubar-subitem-separator-line-color-narrow;
					}
					
					.subitem .title {
						
						// Layout (row oriented)
						display: flex;
						
						// Appearance
						background-color: $menubar-subitem-background-color-narrow;
						
						.symbol { width: $menubar-item-disclosure-symbol-width-narrow; }
						
						.text a {
							display: flex;
							justify-content: start;
							align-items: center;
						}
						
						p { padding-left: $menubar-subitem-indent; }
					}
					
					//a, paddingAsLink { padding: $menubar-subitem-padding-narrow; }
				}
			}
		}
	}

	@include medium-and-wide-layout {

		// Do not show the checkbox label, the input(s) and the menu symbols
		.navbanner-label, input, .symbol { display: none; }
		
		.menubar {
		
			// Layout
			display: flex;
			width: 100%; // Ensures that the full width is used despite using flex.
			flex-direction: row;
			flex-wrap: nowrap;
			justify-content: $menubar-justify-content;
			
			// Appearances
			background-color: $menubar-background-color;
			border: $menubar-border;
			box-shadow: $menubar-box-shadow;
			@include medium-layout {
				padding: $menubar-padding-medium;
			}
			@include wide-layout {
				padding: $menubar-padding-wide;
			}
			
			.separator {
	
				// Color it
				color: $menubar-separator-color;
				background-color: $menubar-separator-background-color;

				@include medium-layout {
				
					// Set padding
					padding: $menubar-separator-padding-medium;
	
					// Set the separator symbol
					p:after { content: $menubar-separator-symbol-medium; }

					// The font for the separator
					p { font: $menubar-separator-font-medium; }
				}
				
				@include wide-layout {
				
					// Set padding
					padding: $menubar-separator-padding-wide;
	
					// Set the separator symbol
					p:after { content: $menubar-separator-symbol-wide; }

					// The font for the separator
					p { font: $menubar-separator-font-wide; }
				}
			}
			
			// Make all p's as small as possible
			p { margin: 0; padding: 0; }
			
			.item {
			
				// Vertical layout
				display: flex;
				flex-direction: column;
			
				// Hover effect
				p { color: $menubar-item-color; }
				background-color: $menubar-item-background-color;
				&:hover {
					p { color: $menubar-item-hover-color; }
					background-color: $menubar-item-background-hover-color;
				}
				
				// Make the entire hightlight block clickable
				a {	display: block; }
				
				// Remove the link underlining
				a { text-decoration: none; }

				@include medium-layout {
				
					// Sizing of the items
					a, .paddingAsLink { padding: $menubar-item-padding-medium;}
					
					// Font for the item text
					p { font: $menubar-item-font-medium; }
				}
				@include wide-layout {

					// Sizing of the items
					a, .paddingAsLink { padding: $menubar-item-padding-wide;}

					// Font for the item text
					p { font: $menubar-item-font-wide; }
				}

				// Display the submenu if the user hovers the mouse over it
				&:hover .dropdown { display: block; }

				// Display the submenu if the user taps the corresponding menu item
				input:checked ~ .dropdown { display: block; }					

				.dropdown {
						
					// Visibility depends on hovering over the item
					display: none;

					// Don't show the separators
					.separator { display: none; }
					
					// Keep the size of the item unaffected by the subitems
					position: absolute;
						
					// Appearances
					border: $menubar-dropdown-border;
					box-shadow: $menubar-dropdown-box-shadow;

					.subitem {
							
						// Hover effect
						p { color: $menubar-subitem-color; }
						background-color: $menubar-subitem-background-color;
						&:hover {
							p { color: $menubar-subitem-hover-color; }
							background-color: $menubar-subitem-background-hover-color;
						}
						
						@include medium-layout {
						
							// Sizing of the subitems
							a, .paddingAsLink { padding: $menubar-subitem-padding-medium; }
							
							// Font for subitem text
							p { font: $menubar-subitem-font-medium; }
						}
						@include wide-layout {
						
							// Sizing of the subitems
							a, .paddingAsLink { padding: $menubar-subitem-padding-wide; }
							
							// Font for subitem text
							p { font: $menubar-subitem-font-wide; }
						}
					}

					// Show selection for pages that match a menu entry
					.isActiveSelection { background-color: $menubar-subitem-active-selection-background-color; }
				}
			}
			
			// Show selection for pages that match a menu entry
			.isActiveSelection { background-color: $menubar-item-active-selection-background-color; }
		}
	}
}

// This bit of CSS is needed to fix the banner and menubar in place at the top of the screen.
//
.navbanner-panel-fixed-menubar {

	// Fix the menu and banner bar to the top of the screen
	position: fixed;
	top: 0;
	width: 100%;
}


